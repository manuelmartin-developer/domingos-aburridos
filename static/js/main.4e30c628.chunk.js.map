{"version":3,"sources":["hooks/useToast.js","Contexts/titleContext.js","Components/MapDeckGL/MapDeckGL.jsx","Components/Home/Home.jsx","Components/MapMetro/MapMetro.jsx","Components/Barcelona/Barcelona.jsx","Components/MapISS/MapISS.jsx","Components/ISS/ISS.jsx","Components/Main/Main.jsx","assets/images/logo.png","Components/Menu/Menu.jsx","Components/Nav/Nav.jsx","Components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","titleContext","React","createContext","MapDeckGL","useState","sourceLng","setSourceLng","sourceLat","setSourceLat","setTitle","useContext","AIR_PORTS","layers","GeoJsonLayer","id","data","filled","pointRadiusMinPixels","pointRadiusScale","getPointRadius","feature","properties","scalerank","getFillColor","pickable","autoHighlight","onClick","info","object","geometry","coordinates","fire","icon","title","name","width","html","wikipedia","showCloseButton","ArcLayer","dataTransform","features","filter","getSourcePosition","getTargetPosition","getSourceColor","getTargetColor","getWidth","updateTriggers","initialViewState","latitude","longitude","zoom","bearing","pitch","minZoom","controller","ContextProvider","MapContext","Provider","mapStyle","style","top","left","Home","MapMetro","APP_ID","process","APP_KEY","lines","setLines","stations","setStations","stationIcon","L","iconUrl","useEffect","a","axios","get","result","console","log","Map","className","center","scrollWheelZoom","LayersControl","BaseLayer","TileLayer","attribution","url","checked","map","index","GeoJSON","color","COLOR_LINIA","point","Marker","Popup","NOM_ESTACIO","PICTO","Barcelona","mapboxgl","workerClass","require","default","accessToken","MapISS","mapContainer","useRef","current","container","updateSource","on","getLocation","altitude","velocity","visibility","flyTo","speed","e","toFixed","type","clearInterval","Error","geojson","addSource","loadImage","error","image","addImage","addLayer","source","layout","getCanvas","cursor","setInterval","getSource","setData","ref","ISS","Main","path","component","exact","Menu","menuOpenState","setMenuOpenState","closeMenu","isOpen","onStateChange","state","handleStateChange","to","Nav","Header","src","logo","alt","App","titleData","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAEaA,E,OAAQC,EAAKC,MAAM,CAC5BC,OAAO,EACPC,SAAU,cACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,ICNTC,EAAeC,IAAMC,cAAc,M,QC6FjCC,EAxFG,WAChB,MAAkCC,mBAAS,mBAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAAS,mBAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,MAGAC,EAFqBC,qBAAWV,GAAxBS,UAEC,eAET,IAAME,EACJ,mFAsCIC,EAAS,CACb,IAAIC,IAAa,CACfC,GAAI,WACJC,KAAMJ,EACNK,QAAQ,EACRC,qBAAsB,EACtBC,iBAAkB,IAClBC,eAAgB,SAACC,GAAD,OAAa,GAAKA,EAAQC,WAAWC,WACrDC,aAAc,CAAC,IAAK,IAAK,EAAG,KAC5BC,UAAU,EACVC,eAAe,EACfC,QA/BY,SAACC,GACXA,EAAKC,SACPtB,EAAaqB,EAAKC,OAAOC,SAASC,YAAY,IAC9CtB,EAAamB,EAAKC,OAAOC,SAASC,YAAY,KAGhDtC,EAAMuC,KAAK,CACTC,MAAM,EACNC,MAAM,OAAD,OAASN,EAAKC,OAAOP,WAAWa,KAAhC,SACLC,MAAO,OACPC,KAAK,yFAAD,OAGGT,EAAKC,OAAOP,WAAWgB,UAH1B,mBAKJC,iBAAiB,EACjBxC,OAAO,OAiBT,IAAIyC,IAAS,CACXzB,GAAI,OACJC,KAAMJ,EACN6B,cAAe,SAACzB,GAAD,OACbA,EAAK0B,SAASC,QAAO,SAACtB,GAAD,OAAaA,EAAQC,WAAWC,UAAY,MACnEqB,kBAAmB,iBAAM,CAACtC,EAAWE,IACrCqC,kBAAmB,SAACxB,GAAD,OAAaA,EAAQS,SAASC,aACjDe,eAAgB,CAAC,GAAI,IAAK,KAC1BC,eAAgB,CAAC,IAAK,IAAK,GAC3BC,SAAU,EACVC,eAAgB,CACdL,kBAAmB,CAACtC,EAAWE,OAKrC,OACE,eAAC,IAAD,CACE0C,iBAnEuB,CACzBC,SAAU,MACVC,UAAW,IACXC,KAAM,EACNC,QAAS,EACTC,MAAO,GACPC,QAAS,GA8DPC,YAAY,EACZ5C,OAAQA,EACR6C,gBAAiBC,IAAWC,SAJ9B,UAME,cAAC,IAAD,CAAWC,SA9Db,qEA+DE,cAAC,IAAD,CAAmBC,MA9DG,CACxBjE,SAAU,WACVkE,IAAK,GACLC,KAAM,UCdKC,EAXF,WAEX,OAKE,aAHA,CAGC,EAAD,K,iHC6FWC,EA3FE,WACf,IAAMC,EAASC,WACTC,EAAUD,mCAChB,EAA0B/D,mBAAS,IAAnC,mBAAOiE,EAAP,KAAcC,EAAd,KACA,EAAgClE,mBAAS,IAAzC,mBAAOmE,EAAP,KAAiBC,EAAjB,MAGA/D,EAFqBC,qBAAWV,GAAxBS,UAEC,mBAET,IAAMgE,EAAcC,IAAE1C,KAAK,CACzB2C,QACE,sJA6BJ,OA1BAC,qBAAU,WACR,sBAAC,4BAAAC,EAAA,+EAEwBC,IAAMC,IAAN,6DACmCb,EADnC,oBACqDE,IAH7E,OAESY,EAFT,OAKGV,EAASU,EAAOjE,KAAK0B,UALxB,gDAOGwC,QAAQC,IAAR,MAPH,wDAAD,KAUC,IAEHN,qBAAU,WACR,sBAAC,4BAAAC,EAAA,+EAEwBC,IAAMC,IAAN,0DACgCb,EADhC,oBACkDE,IAH1E,OAESY,EAFT,OAKGR,EAAYQ,EAAOjE,KAAK0B,UAL3B,gDAOGwC,QAAQC,IAAR,MAPH,wDAAD,KAUC,IAGD,eAACC,EAAA,EAAD,CACEC,UAAU,gBACVC,OAAQ,CAAC,MAAO,MAChBjC,KAAM,GACNkC,iBAAiB,EAJnB,UAME,eAACC,EAAA,EAAD,CAAe3F,SAAS,WAAxB,UACE,cAAC2F,EAAA,EAAcC,UAAf,CAAyBtD,KAAK,aAA9B,SACE,cAACuD,EAAA,EAAD,CACEC,YAAY,wFACZC,IAAI,yDAGR,cAACJ,EAAA,EAAcC,UAAf,CAAyBI,SAAO,EAAC1D,KAAK,iBAAtC,SACE,cAACuD,EAAA,EAAD,CACEC,YAAY,wFACZC,IAAI,6DAKTtB,EAAMwB,KAAI,SAACzE,EAAS0E,GACnB,OACE,cAACC,EAAA,EAAD,CAEEhF,KAAMK,EACN4E,MAAK,WAAM5E,EAAQC,WAAW4E,cAFzBH,MAMVvB,EAASsB,KAAI,SAACK,EAAOJ,GACpB,OACE,cAACK,EAAA,EAAD,CAEEvG,SAAU,CACRsG,EAAMrE,SAASC,YAAY,GAC3BoE,EAAMrE,SAASC,YAAY,IAE7BE,KAAMyC,EANR,SAQE,eAAC2B,EAAA,EAAD,WACE,6BAAKF,EAAM7E,WAAWgF,cADxB,KAC4CH,EAAM7E,WAAWiF,MAD7D,QAPKR,UC9EFS,EANG,WAChB,OACE,cAAC,EAAD,K,wBCGJC,IAASC,YAAcC,EAAQ,KAAqDC,QAEpFH,IAASI,YAAczC,+FAEvB,IA8Ge0C,EA9GA,WACb,IAAMC,EAAeC,iBAAO,MACtBlB,EAAMkB,iBAAO,MACnB,EAAe3G,mBAAS,GAAjBgD,EAAP,oBACA,EAA4B1C,qBAAWV,GAAvC,EAAQiC,MAmGR,OAjGAxB,EAFA,EAAeA,UAEN,sCAETmE,qBAAU,WACJiB,EAAImB,UACRnB,EAAImB,QAAU,IAAIR,IAASrB,IAAI,CAC7B8B,UAAWH,EAAaE,QACxBnD,MAAO,sCACPwB,OAAQ,EAAE,OAAQ,SAClBjC,KAAMA,QAIVwB,qBAAU,WACR,IAAIsC,EA+EJ,OA9EArB,EAAImB,QAAQG,GAAG,OAAf,sBAAuB,mBAmCNC,EAnCM,WAAAvC,EAAA,iGAAAA,EAAA,MAmCrB,WAA2BqC,GAA3B,2BAAArC,EAAA,+EAEyBC,IAAMC,IACzB,kDAHN,cAEUC,EAFV,gBAOYA,EAAOjE,KAPnB,uBAMYmC,EANZ,EAMYA,SAAUC,EANtB,EAMsBA,UAAWkE,EANjC,EAMiCA,SAAUC,EAN3C,EAM2CA,SAAUC,EANrD,EAMqDA,WAGjD1B,EAAImB,QAAQQ,MAAM,CAChBnC,OAAQ,CAAClC,EAAWD,GACpBuE,MAAO,GACPrE,KAAM,IAGRyC,EAAImB,QAAQG,GAAG,QAAS,OAAO,SAACO,GAC9BlI,EAAMuC,KAAK,CACTC,KAAM,OACNC,MAAO,8CACPG,KAAK,oBAAD,OAAsBiF,EAASM,QAAQ,GAAvC,6DACiBL,EAASK,QAAQ,GADlC,gEAEmBJ,QArB/B,kBAyBW,CACLK,KAAM,oBACNnF,SAAU,CACR,CACEmF,KAAM,UACN/F,SAAU,CACR+F,KAAM,QACN9F,YAAa,CAACqB,EAAWD,QAhCrC,wCAsCQgE,GAAcW,cAAcX,GAC1B,IAAIY,MAAJ,MAvCV,0DAnCqB,yBAmCNV,EAnCM,qDACCA,IADD,OACfW,EADe,OAErBlC,EAAImB,QAAQgB,UAAU,MAAO,CAC3BJ,KAAM,UACN7G,KAAMgH,IAERlC,EAAImB,QAAQiB,UACV,2LACA,SAACC,EAAOC,GACN,GAAID,EAAO,MAAMA,EACjBrC,EAAImB,QAAQoB,SAAS,WAAYD,MAGrCtC,EAAImB,QAAQqB,SAAS,CACnBvH,GAAI,MACJ8G,KAAM,SACNU,OAAQ,MACRC,OAAQ,CACN,aAAc,cAIlB1C,EAAImB,QAAQG,GAAG,aAAc,OAAO,WAClCtB,EAAImB,QAAQwB,YAAY3E,MAAM4E,OAAS,aAGzC5C,EAAImB,QAAQG,GAAG,aAAc,OAAO,WAClCtB,EAAImB,QAAQwB,YAAY3E,MAAM4E,OAAS,MAGzCvB,EAAewB,YAAW,sBAAC,4BAAA7D,EAAA,sEACHuC,EAAYF,GADT,OACnBa,EADmB,OAEzBlC,EAAImB,QAAQ2B,UAAU,OAAOC,QAAQb,GAFZ,2CAGxB,KAjCkB,6CA8EhB,WACLF,cAAcX,MAEf,IAGD,yBAAS9B,UAAU,MAAnB,SACE,qBAAKyD,IAAK/B,EAAc1B,UAAU,qBC5GzB0D,EANH,WACV,OACE,cAAC,EAAD,KCWWC,EAVF,WACX,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWjF,EAAMkF,OAAK,IACtC,cAAC,IAAD,CAAOF,KAAK,aAAaC,UAAW1C,IACpC,cAAC,IAAD,CAAOyC,KAAK,OAAOC,UAAWH,QCZrB,MAA0B,iC,SCmC1BK,EA9BF,WACX,MAA0C/I,oBAAS,GAAnD,mBAAOgJ,EAAP,KAAsBC,EAAtB,KAKMC,EAAY,WAChBD,GAAiB,IAGnB,OACE,eAAC,SAAD,CACElH,MAAO,OACP4B,MAAI,EACJwF,OAAQH,EACRI,cAAe,SAACC,GAAD,OAZO,SAACA,GACzBJ,EAAiBI,EAAMF,QAWKG,CAAkBD,IAJ9C,UAME,cAAC,IAAD,CAAM/H,QAAS,kBAAM4H,KAAalE,UAAU,YAAYuE,GAAG,IAA3D,kCAGA,cAAC,IAAD,CAAMjI,QAAS,kBAAM4H,KAAalE,UAAU,YAAYuE,GAAG,aAA3D,uCAGA,cAAC,IAAD,CAAMjI,QAAS,kBAAM4H,KAAalE,UAAU,YAAYuE,GAAG,OAA3D,6DCjBSC,EARH,WACV,OACE,qBAAKxE,UAAU,MAAf,SACE,cAAC,EAAD,OCkBSyE,EAjBA,WACb,IAAQ5H,EAAUvB,qBAAWV,GAArBiC,MACR,OACE,qCACE,cAAC,EAAD,IACF,yBAAQmD,UAAU,SAAlB,UACE,qBAAKA,UAAU,eAAf,SACE,6BAAKnD,MAEP,cAAC,IAAD,CAAM0H,GAAG,IAAT,SACE,qBAAKvE,UAAU,cAAc0E,IAAKC,EAAMC,IAAI,kBCarCC,EApBJ,WAET,MAA0B7J,mBAAS,eAAnC,mBACM8J,EAAY,CAChBjI,MAFF,KAGExB,SAHF,MAMA,OACE,mCACE,cAAC,IAAD,UACA,eAACT,EAAa2D,SAAd,CAAuBwG,MAAOD,EAA9B,UACE,cAAC,EAAD,IACA,cAAC,EAAD,YCXOE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4e30c628.chunk.js","sourcesContent":["import Swal from \"sweetalert2\";\n\nexport const Toast = Swal.mixin({\n    toast: true,\n    position: \"bottom-left\",\n    showConfirmButton: false,\n    timer: 7000,\n    timerProgressBar: true,\n  });","import React from 'react';\nexport const titleContext = React.createContext(null);","import React, { useState, useContext } from \"react\";\nimport { StaticMap, MapContext, NavigationControl } from \"react-map-gl\";\nimport DeckGL, { GeoJsonLayer, ArcLayer } from \"deck.gl\";\nimport { Toast } from \"../../hooks/useToast\";\nimport { titleContext } from \"../../Contexts/titleContext\";\n\nconst MapDeckGL = () => {\n  const [sourceLng, setSourceLng] = useState(2.078003349812917);\n  const [sourceLat, setSourceLat] = useState(41.30315527974634);\n  const { setTitle } = useContext(titleContext);\n\n  setTitle(\"Aeropuertos\");\n\n  const AIR_PORTS =\n    \"https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_airports.geojson\";\n\n  const INITIAL_VIEW_STATE = {\n    latitude: 51.47,\n    longitude: 0.45,\n    zoom: 3,\n    bearing: 0,\n    pitch: 30,\n    minZoom: 3,\n  };\n\n  const MAP_STYLE =\n    \"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\";\n  const NAV_CONTROL_STYLE = {\n    position: \"absolute\",\n    top: 80,\n    left: 10,\n  };\n  const onClick = (info) => {\n    if (info.object) {\n      setSourceLng(info.object.geometry.coordinates[0]);\n      setSourceLat(info.object.geometry.coordinates[1]);\n    }\n\n    Toast.fire({\n      icon: false,\n      title: `<h3>${info.object.properties.name}</h3>`,\n      width: \"100%\",\n      html: `<iframe id=\"inlineFrameExample\",,\n      width=\"100%\"\n      height=\"400\"\n      src=\"${info.object.properties.wikipedia}\">\n  </iframe>`,\n      showCloseButton: true,\n      timer: false,\n    });\n  };\n\n  const layers = [\n    new GeoJsonLayer({\n      id: \"airports\",\n      data: AIR_PORTS,\n      filled: true,\n      pointRadiusMinPixels: 2,\n      pointRadiusScale: 2000,\n      getPointRadius: (feature) => 11 - feature.properties.scalerank,\n      getFillColor: [253, 158, 2, 180],\n      pickable: true,\n      autoHighlight: true,\n      onClick,\n    }),\n    new ArcLayer({\n      id: \"arcs\",\n      data: AIR_PORTS,\n      dataTransform: (data) =>\n        data.features.filter((feature) => feature.properties.scalerank < 4),\n      getSourcePosition: () => [sourceLng, sourceLat],\n      getTargetPosition: (feature) => feature.geometry.coordinates,\n      getSourceColor: [33, 158, 188],\n      getTargetColor: [253, 158, 2],\n      getWidth: 1,\n      updateTriggers: {\n        getSourcePosition: [sourceLng, sourceLat],\n      },\n    }),\n  ];\n\n  return (\n    <DeckGL\n      initialViewState={INITIAL_VIEW_STATE}\n      controller={true}\n      layers={layers}\n      ContextProvider={MapContext.Provider}\n    >\n      <StaticMap mapStyle={MAP_STYLE} />\n      <NavigationControl style={NAV_CONTROL_STYLE} />\n    </DeckGL>\n  );\n};\n\nexport default MapDeckGL;\n","import React from \"react\";\n\n// import Map from '../Map';\nimport MapDeckGl from \"../MapDeckGL\";\n\nconst Home = () => {\n\n  return (\n\n    // Mapa de la red de Autobuses de Cáceres. No funciona en\n    // producción al hacer un fetch a una url sin SSL.\n    // <Map />\n    <MapDeckGl />\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Map,\n  TileLayer,\n  Marker,\n  Popup,\n  LayersControl,\n  GeoJSON,\n} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { titleContext } from \"../../Contexts/titleContext\";\n\nconst MapMetro = () => {\n  const APP_ID = process.env.REACT_APP_TMB_ID;\n  const APP_KEY = process.env.REACT_APP_TMB_KEY;\n  const [lines, setLines] = useState([]);\n  const [stations, setStations] = useState([]);\n  const { setTitle } = useContext(titleContext);\n\n  setTitle(\"Metro Barcelona\");\n\n  const stationIcon = L.icon({\n    iconUrl:\n      \"https://img.icons8.com/external-those-icons-lineal-color-those-icons/24/000000/external-metro-wayfinding-those-icons-lineal-color-those-icons.png\",\n  });\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const result = await axios.get(\n          `https://api.tmb.cat/v1/transit/linies/metro?app_id=${APP_ID}&app_key=${APP_KEY}`\n        );\n        setLines(result.data.features);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const result = await axios.get(\n          `https://api.tmb.cat/v1/transit/estacions?app_id=${APP_ID}&app_key=${APP_KEY}`\n        );\n        setStations(result.data.features);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n\n  return (\n    <Map\n      className=\"map-container\"\n      center={[41.38, 2.16]}\n      zoom={12}\n      scrollWheelZoom={true}\n    >\n      <LayersControl position=\"topright\">\n        <LayersControl.BaseLayer name=\"Clásico\">\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n        </LayersControl.BaseLayer>\n        <LayersControl.BaseLayer checked name=\"Blanco y negro\">\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n          />\n        </LayersControl.BaseLayer>\n      </LayersControl>\n\n      {lines.map((feature, index) => {\n        return (\n          <GeoJSON\n            key={index}\n            data={feature}\n            color={`#${feature.properties.COLOR_LINIA}`}\n          />\n        );\n      })}\n      {stations.map((point, index) => {\n        return (\n          <Marker\n            key={index}\n            position={[\n              point.geometry.coordinates[1],\n              point.geometry.coordinates[0],\n            ]}\n            icon={stationIcon}\n          >\n            <Popup>\n              <h3>{point.properties.NOM_ESTACIO}</h3> ({point.properties.PICTO})\n            </Popup>\n          </Marker>\n        );\n      })}\n    </Map>\n  );\n};\n\nexport default MapMetro;\n","import React from \"react\";\n\nimport MapMetro from '../MapMetro';\n\nconst Barcelona = () => {\n  return (\n    <MapMetro />\n  );\n};\n\nexport default Barcelona;\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\n\nimport mapboxgl from \"mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nimport { Toast } from \"../../hooks/useToast\";\nimport { titleContext } from \"../../Contexts/titleContext\";\n// eslint-disable-next-line import/no-webpack-loader-syntax\nmapboxgl.workerClass = require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\n\nconst MapISS = () => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [zoom] = useState(2);\n  const { title, setTitle } = useContext(titleContext);\n\n  setTitle(\"Estación Espacial Internacional\");\n\n  useEffect(() => {\n    if (map.current) return;\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/satellite-v9\",\n      center: [-6.3707, 39.4762],\n      zoom: zoom,\n    });\n  });\n\n  useEffect(() => {\n    let updateSource;\n    map.current.on(\"load\", async () => {\n      const geojson = await getLocation();\n      map.current.addSource(\"iss\", {\n        type: \"geojson\",\n        data: geojson,\n      });\n      map.current.loadImage(\n        \"https://img.icons8.com/external-tal-revivo-color-tal-revivo/48/000000/external-international-space-station-satellite-with-multiples-charging-solar-panel-astronomy-color-tal-revivo.png\",\n        (error, image) => {\n          if (error) throw error;\n          map.current.addImage(\"iss_icon\", image);\n        }\n      );\n      map.current.addLayer({\n        id: \"iss\",\n        type: \"symbol\",\n        source: \"iss\",\n        layout: {\n          \"icon-image\": \"iss_icon\",\n        },\n      });\n\n      map.current.on(\"mouseenter\", \"iss\", () => {\n        map.current.getCanvas().style.cursor = \"pointer\";\n      });\n\n      map.current.on(\"mouseleave\", \"iss\", () => {\n        map.current.getCanvas().style.cursor = \"\";\n      });\n\n      updateSource = setInterval(async () => {\n        const geojson = await getLocation(updateSource);\n        map.current.getSource(\"iss\").setData(geojson);\n      }, 2000);\n\n      async function getLocation(updateSource) {\n        try {\n          const result = await axios.get(\n            \"https://api.wheretheiss.at/v1/satellites/25544\"\n          );\n\n          const { latitude, longitude, altitude, velocity, visibility } =\n            await result.data;\n\n          map.current.flyTo({\n            center: [longitude, latitude],\n            speed: 0.5,\n            zoom: 5,\n          });\n\n          map.current.on(\"click\", \"iss\", (e) => {\n            Toast.fire({\n              icon: \"info\",\n              title: \"<h3>Estación Espacial Internacional</h3>\",\n              html: `<b>Altitud: </b> ${altitude.toFixed(2)} km <br/> <br/>\n              <b>Velocidad: </b> ${velocity.toFixed(2)} km/h<br/> <br/>\n              <b>Visibilidad: </b> ${visibility}`,\n            });\n          });\n\n          return {\n            type: \"FeatureCollection\",\n            features: [\n              {\n                type: \"Feature\",\n                geometry: {\n                  type: \"Point\",\n                  coordinates: [longitude, latitude],\n                },\n              },\n            ],\n          };\n        } catch (err) {\n          if (updateSource) clearInterval(updateSource);\n          throw new Error(err);\n        }\n      }\n    });\n    return(() => {\n      clearInterval(updateSource)\n    })\n  }, []);\n\n  return (\n    <section className=\"map\">\n      <div ref={mapContainer} className=\"map-container\" />\n    </section>\n  );\n};\n\nexport default MapISS;\n","import React from \"react\";\n\nimport MapISS from '../MapISS';\n\nconst ISS = () => {\n  return (\n    <MapISS />\n  );\n};\n\nexport default ISS;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\n\nimport Home from '../Home';\nimport Barcelona from \"../Barcelona/Barcelona\";\nimport ISS from '../ISS/ISS'\n\nconst Main = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n      <Route path=\"/barcelona\" component={Barcelona} />\n      <Route path=\"/iss\" component={ISS} />\n    </Switch>\n  );\n};\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/logo.6d3ac2f1.png\";","import React, { useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { bubble as ReactMenu } from \"react-burger-menu\";\n\nconst Menu = () => {\n  const [menuOpenState, setMenuOpenState] = useState(false);\n\n  const handleStateChange = (state) => {\n    setMenuOpenState(state.isOpen);\n  };\n  const closeMenu = () => {\n    setMenuOpenState(false);\n  };\n\n  return (\n    <ReactMenu\n      width={\"100%\"}\n      left\n      isOpen={menuOpenState}\n      onStateChange={(state) => handleStateChange(state)}\n    >\n      <Link onClick={() => closeMenu()} className=\"menu-item\" to=\"/\">\n        Aeropuertos - Deckgl\n      </Link>\n      <Link onClick={() => closeMenu()} className=\"menu-item\" to=\"/barcelona\">\n        Metro Barcelona - Leaflet\n      </Link>\n      <Link onClick={() => closeMenu()} className=\"menu-item\" to=\"/iss\">\n        Estación Espacial Internacional - Mapbox\n      </Link>\n    </ReactMenu>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\nimport Menu from '../Menu';\n\nconst Nav = () => {\n  return (\n    <nav className=\"nav\">\n      <Menu />\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from '../../assets/images/logo.png';\n\nimport Nav from \"../Nav\";\nimport { titleContext } from \"../../Contexts/titleContext\";\n\nconst Header = () => {\n  const { title } = useContext(titleContext);\n  return (\n    <>\n      <Nav />\n    <header className=\"header\">\n      <div className=\"header-title\">\n        <h3>{title}</h3>\n      </div>\n      <Link to=\"/\">\n        <img className=\"header-logo\" src={logo} alt=\"logo\" />\n      </Link>\n    </header>\n    </>\n  );\n};\n\nexport default Header;\n","\nimport React, { useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './App.scss';\nimport Main from './Components/Main';\nimport Header from './Components/Header';\nimport { titleContext } from './Contexts/titleContext';\n\n\nconst App =() => {\n\n  const [title, setTitle] = useState(\"Aeropuertos\");\n  const titleData = {\n    title: title,\n    setTitle: setTitle\n  }\n\n  return (\n    <>\n      <BrowserRouter>\n      <titleContext.Provider value={titleData}>\n        <Header />\n        <Main />\n      </titleContext.Provider>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/style.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}